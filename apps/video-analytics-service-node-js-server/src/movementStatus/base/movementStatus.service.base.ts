/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, MovementStatus as PrismaMovementStatus } from "@prisma/client";

export class MovementStatusServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MovementStatusCountArgs, "select">
  ): Promise<number> {
    return this.prisma.movementStatus.count(args);
  }

  async movementStatuses(
    args: Prisma.MovementStatusFindManyArgs
  ): Promise<PrismaMovementStatus[]> {
    return this.prisma.movementStatus.findMany(args);
  }
  async movementStatus(
    args: Prisma.MovementStatusFindUniqueArgs
  ): Promise<PrismaMovementStatus | null> {
    return this.prisma.movementStatus.findUnique(args);
  }
  async createMovementStatus(
    args: Prisma.MovementStatusCreateArgs
  ): Promise<PrismaMovementStatus> {
    return this.prisma.movementStatus.create(args);
  }
  async updateMovementStatus(
    args: Prisma.MovementStatusUpdateArgs
  ): Promise<PrismaMovementStatus> {
    return this.prisma.movementStatus.update(args);
  }
  async deleteMovementStatus(
    args: Prisma.MovementStatusDeleteArgs
  ): Promise<PrismaMovementStatus> {
    return this.prisma.movementStatus.delete(args);
  }
}
